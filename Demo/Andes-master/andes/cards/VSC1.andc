# ANDES card file, 1.0

name = VSC4

doc_string = Current-source controlled VSC dynamic model

group = AC/DC

data = 
 vsc: None;
 Kp1: 0.2; Ki1: 1; Kp2: 0.2; Ki2: 1;
 Kp3: 0.2; Ki3: 1; Kp4: 0.2; Ki4: 1;
 Kpdc: 0.2; Kidc: 1;
 Tt: 0.01; Tdc: 0.01;

params = Kp1; Ki1; Kp2; Ki2; Kp3; Ki3; Kp4; Ki4; Kpdc; Kidc; Tt; Tdc;

mandatory = vsc;

descr = 
 vsc: static vsc idx;
 Kp1: Inner current controller proportional gain;
 Ki1: Innercurrent controller integrator gain;
 Kp2: P or Vdc controller proportional gain;
 Ki2: P or Vdc voltage controller integrator gain;
 Kp3: Q or V controller proportional gain;
 Ki3: Q or V controller integrator gain;
 Tt: ac voltage measurement delay time constant;
 Tdc: dc voltage time constant;

algebs = ref1; ref2; adq; vd; vq; p; q; Idref; Iqref; Idcy;


interfaces = a; v; v1; v2

ctrl = 
 rsh: VSC, rsh, vsc, c;
 xsh: VSC, xsh, vsc, c;
 PQ: VSC, PQ, vsc, c;
 PV: VSC, PV, vsc, c;
 vQ: VSC, vQ, vsc, c;
 vV: VSC, vV, vsc, c;
 a: VSC, a, vsc, y;
 v: VSC, v, vsc, y;
 v1: VSC, v1, vsc, y;
 v2: VSC, v2, vsc, y;
 pref0: VSC, psh, vsc, c;
 qref0: VSC, qsh, vsc, c;
 
service_eq = 
 iTt: 1/Tt; 
 iTdc: 1/Tdc; 
 iLsh: 1/xsh;
 vref0: (PV + vV) * v;
 vdcref0: (vV + vQ) * (v1 - v2);
 ref10: (vV + vQ) * (v1 - v2) + (PQ + PV) * pref0
 ref20: (PV + vV) * v + (PQ+ vQ) * qref0

init1_eq = 
 vd: v;
 vq: 0;
 Idref: pref0 / vd;
 Iqref: qref0 / vd;
 Id: Idref;
 Iq: Iqref;
 ud: vd + xsh*Iq + rsh*Id;
 uq: vq - xsh*Id + rsh*Iq;
 Idcy: (PQ + PV) * ((-ud*Id - Iq*uq) /(v1-v2));
 Idcx: (vV+ vQ) * ((-ud*Id - Iq*uq) /(v1-v2));
 Md: rsh * Id;
 Mq: rsh * Iq;
 Nd: (vV + vQ) * Idcx;
 Nq: (PV + vV) * Iq;
 p: vd*Id + vq*Iq;
 q: vd*Iq - vq*Id;
 ref1: ref10;
 ref2: ref20
 adq: a;

algeb_eq =
 ref10 - ref1;
 ref20 - ref2;
 adq - a;
 v*cos(adq - a) - vd; 
 v*sin(adq - a) - vq;
 vd*Id + vq*Iq - p;
 vd*Iq - vq*Id - q;
 (PQ + PV)*(ref1/vd + Kp2*(ref1 - p) + Nd) + (vQ + vV) * (-Idcx*(v1 - v2) - (uq*Iq))/ud - Idref;
 (PQ + vQ)*(ref2/vd + Kp3*(ref2 - q)) + (PV + vV)*(Kp3 * (ref2 - vd)) + Nq - Iqref;
# vd + xsh*Iqref + Kp1*(Idref - Id) + Md - udref;
# vq - xsh*Idref + Kp1*(Iqref - Iq) + Mq - uqref;
 (PQ + PV)* (-ud*Id - uq*Iq)/(v1 - v2) - Idcy;
 -p;
 -q;
 -(PQ + PV)*Idcy - (vV + vQ)*Idcx;
 +(PQ + PV)*Idcy + (vV + vQ)*Idcx;

states = Id; Iq; ud; uq; Md; Mq; Nd; Nq; Idcx;

diff_eq = 
 -rsh*iLsh*Id - Iq + iLsh*(ud - vd);
 -rsh*iLsh*Iq + Id + iLsh*(uq - vq);
 iTt*((vd + xsh*Iqref + Kp1*(Idref - Id) + Md) - ud);
 iTt*((vq - xsh*Idref + Kp1*(Iqref - Iq) + Mq) - uq);
 Ki1*(Idref - Id);
 Ki1*(Iqref - Iq);
 (PQ + PV)*(Ki2*(ref1 - p)) + (vQ + vV)*(Ki2*(ref1 - v1));
 (PQ + vQ)*(Ki3*(ref2 - q)) + (PV + vV)*(Ki3*(ref2 - vd));
 (vV + vQ)*iTdc*(Idcx - Kp2*(ref1 - v1) - Nd);