# ANDES card file, 1.0

# field = elements
# an element can be a dictionary denoted with colon
# multiple elements: separate with semi-colon
# multiple lines supported

name = PSS1

doc_string = Stabilizer ST2CUT with dual input signals

group = PSS

data =
 avr: 0; u: 1;
 K1: 0; T1: 0.02;
 K2: 0; T2: 0.02;
 T3: 1; T4: 1;
 T5: 1.5; T6: 0.15;
 T7: 1.5; T8: 0.15;
 T9: 1.5; T10: 0.15;
 lsmax: 0.3; lsmin: -0.3;
 vcu: 1.25; vcl: 0.6;
 Ic1: 0; Ic2: 0

descr =
 avr: Exciter id;
 Ic1: Input 1 control switch; Ic2: Input 2 control switch;
 K1: Input 1 gain; T1: Input 1 time constant;
 K2: Input 2 gain; T2: Input 2 time constant;
 T3: Washout time constant (numerator);
 T4: Washout time constant (denominator);
 T5: LL1 time constant (zero);
 T6: LL1 time constant (pole);
 T7: LL2 time constant (zero);
 T8: LL2 time constant (pole);
 T9: LL3 time constant (zero);
 T10: LL3 time constant (pole);
 lsmax: PSS output maximum limit;
 lsmin: PSS output minimum limit;
 vcl: cutoff lower limit offset;
 vcu: cutoff upper limit offset;

units =
 T1: s; T2: s; T3: s; T4: s; T5: s; T6: s; T7: s; T8: s;T9: s; T10: s;
 lsmax: pu; lsmin: pu; vcl: pu; vcu: pu

params = K1; T1; K2; T2; T3; T4; T5; T6; T7; T8; T9; T10; lsmax; lsmin; vcu; vcl

mandatory = avr; Ic1; Ic2

times = T1; T2; T3; T4; T5; T6; T7; T8; T9; T10

zeros = T4

ctrl =
 uavr: AVR, u, avr, c;
 syn: AVR, syn, avr, c;
 usyn: Synchronous, u, syn, c;
 omega: Synchronous, omega, syn, x;
 Sg: Synchronous, Sn, syn, c;
 bus: Synchronous, bus, syn, c;
 w: BusFreq, w, bus, x;
 p: Synchronous, p, syn, y;
 pm: Synchronous, pm, syn, y;
 v: Synchronous, v, syn, y;
 vf: Synchronous, vf, syn, y;

algebs = In1; In2; In; x3; x4; x5; x6; vss; vst
fnamey = In_1; In_2; In; x_3; x_4; x_5; x_6; V_{SS}; V_{ST}

states = x1; x2; u3; u4; u5; u6
fnamex = x_1; x_2; u_3; u_4; u_5; u_6

interfaces = vf

service_eq =
Ic11: 1; Ic12: 0; Ic13: 0; Ic14: 0; Ic15: 0;
Ic21: 1; Ic22: 0; Ic23: 0; Ic24: 0; Ic25: 0;
T34: T3/T4; T56: T5/T6; T78: T7/T8; T910: T9/T10;
toSg: 100 / Sg;
v0: v
u0: usyn*uavr*u

init1_eq =
In1: u0 * (Ic11*(omega - 1) + Ic12*(w - 1) + Ic13*p*toSg + Ic14*pm*toSg + Ic15*v);
In2: u0 * (Ic21*(omega - 1) + Ic22*(w - 1) + Ic23*p*toSg + Ic24*pm*toSg + Ic25*v);
x1: u0 * K1 * In1;
x2: u0 * K2 * In2;
In: u0 * (In1 + In2);
u3: u0 * (In * T34)

algeb_eq =
 u0 * (Ic11*(omega - 1) + Ic12*(w - 1) + Ic13*p*toSg + Ic14*pm*toSg + Ic15*v - In1);
 u0 * (Ic21*(omega - 1) + Ic22*(w - 1) + Ic23*p*toSg + Ic24*pm*toSg + Ic25*v - In2);
 u0 * (In1 + In2 - In);
 u0 * (T34*In - u3 - x3);
 u0 * (T56*x3 + u4 - x4);
 u0 * (T78*x4 + u5 - x5);
 u0 * (T910*x5 + u6 - x6);
 u0 * (x6 - vss);
 u0 * (vss - vst);
 u0 * vst;

hard_limit = vss: lsmin, lsmax

diff_eq =
 u0 * (K1*In1 - x1) / T1;
 u0 * (K2*In2 - x2) / T2;
 u0 * (In*T34 - u3) / T4;
 u0 * (x3 * (1 - T56) - u4) / T6;
 u0 * (x4 * (1 - T78) - u5) / T8;
 u0 * (x5 * (1 - T910) - u6) / T10;